---
title: "Visualizing Greenhouse Gas Emissions in the world"
subtitle: "Data Preparation done by *Team Bisque*"
format: html
author: "
  Ryan Chua - 2201421<br>
  Loo Siong Yu - 2201255<br>
  Chua Kang Le - 2201161<br>
  Phua Tiffany - 2202698<br>
  Woon Jun Wei - 2200624<br>
  Ong Si Hui - 2201945"
---

# Introduction

This Quarto document contains the data engineering required to reconstruct and improve the plot made by [World Resources Institute](https://www.wri.org/insights/4-charts-explain-greenhouse-gas-emissions-countries-and-sectors), shown in @fig-oldvs, showing the top 10 Green House Gases (GHG) emitters in the world.

The code below requires the following packages:
```{r}
#| label: library
#| message: false

library(tidyverse)
library(readxl)
library(knitr)
library(gt)
library(dplyr)

# Graphical Visualisation
library(ggplot2)
library(maps)
```

```{r}
#| label: fig-oldvs
#| echo: false
#| fig.cap: "Visualization of The Top 10 GHG Emitters Contribute Over Two-Thirds of Global Emissions."

include_graphics("images/old_visualization.jpg")
```

# Data Exploration and Preparation

## Source 1 (Main Source) {#source1}

Firstly, lets take a look at the raw data provided from [climatewatchdata.org](https://www.climatewatchdata.org/ghg-emissions)

```{r}
#| label: explore-raw
#| message: false

ghg_raw <- read_csv("data/historical_emissions.csv")
gt_preview(ghg_raw)
```

From the preview, lets check how many unique Countries, Sectors, Gases and Unit are there in the dataset

```{r}
#| label: explore-unique
#| message: false

ghg_raw |>
  summarize(
    n_distinct(Country),
  )
ghg_raw |>
  summarize(
    n_distinct(Sector),
    n_distinct(Gas),
    n_distinct(Unit)
  )
```

Since there is only 1 distinct `Sector`, `Gas` and `Unit` type, we can drop those columns along with the `Source` column as it is not needed for our analysis. The unit MtCO₂e stands for "million metric tons of carbon dioxide equivalent."

```{r}
ghg_raw <-
  ghg_raw |>
  select(-c(Sector, Gas, Unit, "Data source"))

gt_preview(ghg_raw)
```

Then we pivot the data long to make it easier to work with

```{r}
ghg_raw <-
  ghg_raw |>
  pivot_longer(
    cols = 3:33, names_to = "Year", values_to = "Emissions",
    values_transform = list(Emissions = as.numeric)
  )

gt_preview(ghg_raw)
```



## Source 2 (Alternative Source) {#source2}

Next, we will take a look at another source, where the data is slightly more updated, up to 2022. [ourworldindata.org](https://ourworldindata.org/greenhouse-gas-emissions)

```{r}
#| label: explore-raw2
#| message: false

ghg_raw2 <- read_csv("data/historical_emissions_source2.csv")
gt_preview(ghg_raw2)
```

Lets check the unique number of countries as well

```{r}
#| label: explore-unique2
#| message: false

ghg_raw2 |>
  summarize(
    n_distinct(Entity),
  )
```

Since there are more countries covered, we can potentially keep the data from this source and merge it with the first source.

## Source 3 (Alternative Source) {#source3}

Lastly, we will take a look at the third source, where the data has more details

```{r}
#| label: explore-raw3
#| message: false

ghg_raw3 <- read_csv("data/historical_emissions_source3.csv")
gt_preview(ghg_raw3)
```

From the preview we can see that there are many features, lets extract out the relevant ones to preview

```{r}
ghg_raw3 <-
  ghg_raw3 |>
  select(Country, Industry, Gas_Type, F1970:F2022)

gt_preview(ghg_raw3)
```

From this we can tell that this data source not only have the countries, but it is split by the gas type and industry

## Conclusion from exploration

[Source 1](#source1) and [Source 2](#source2) have similar data, both consisting of each country's annual GHG emission. These data are suitable for a simple analysis while [Source 3](#source3) is more detailed, with the data split by industry and gas type.

We can potentially merge Source 1 and 2 together to get a more complete dataset, and then explore Source 3 for more detailed analysis/different angles.


# Sample Visualisations with ggplot

## Source 1 (Main Source) {#source1_viz}

Lets start by visualizing the data from the main source with a heatmap

```{r}
#| label: source1-heatmap

# Select the countries largest overall 10 emitters and display their emissions over the years in a heatmap
ghg_raw |>
  filter(Country %in% c("China", "United States", "India", "Russia", "Japan", "Indonesia", "Iran", "Saudi Arabia", "South Korea", "Canada")) |>
  ggplot(aes(x = Year, y = Country, fill = Emissions)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "white", high = "red") +
  scale_x_discrete(expand = c(0, 0)) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    plot.margin = margin(20, 20, 20, 20),
    legend.position = "bottom"
  ) +
  labs(
    title = "Top 10 GHG Emitters",
    subtitle = "Emissions Over The Years",
    x = "Year",
    y = "Country",
    fill = "Emissions (MtCO₂e)"
  )
```

World Map view of the all GHG emitters

```{r}
#| label: source1-worldmap

world <- map_data("world")

ghg_data <- ghg_raw |>
  # Filter top 10
  # filter(Country %in% c("China", "United States", "India", "Russia", "Japan", "Indonesia", "Iran", "Saudi Arabia", "South Korea", "Canada")) |>

  # Combine (sum) all the emissions for each country
  group_by(Country) |>
  summarize(Emissions = sum(Emissions)) |>
  # Ensure the region column matches the map data
  mutate(region = Country)

# Join the map data with the emissions data
world_map <- left_join(world, ghg_data, by = c("region" = "Country"))

# Plot the world map
ggplot(world_map, aes(x = long, y = lat, group = group, fill = Emissions)) +
  geom_polygon(color = "black") +
  scale_fill_gradient(low = "white", high = "red", na.value = "gray") +
  coord_fixed(1.3) +
  theme_void() +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    plot.margin = margin(20, 20, 20, 20),
    legend.position = "right"
  ) +
  labs(
    title = "Top 10 GHG Emitters",
    subtitle = "Emissions in 2020",
    fill = "Emissions (MtCO₂e)"
  )
```

Simple Line graph with trend line

```{r}
#| label: source1-line

ghg_raw |>
  filter(Country %in% c("China", "United States", "India")) |>
  ggplot(aes(x = Year, y = Emissions, color = Country, shape = Country)) +
  geom_point() + # Scatterplot
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    plot.margin = margin(20, 20, 20, 20),
    legend.position = "bottom"
  ) +
  labs(
    title = "GHG Emissions Over the Years",
    subtitle = "For Top 3 Emitting Countries",
    x = "Year",
    y = "Emissions (MtCO₂e)",
    color = "Country",
    shape = "Country"
  )
```

Lets compare that against Energy generation type per country
[Source](https://climatedata.imf.org/datasets/0bfab7fb7e0e4050b82bba40cd7a1bd5/explore)

First, we format the data into each country and their energy generation per year

```{r}
#| label: source4-raw
#| message: false

expenditure <- read_csv("data/energy_transition.csv")

expenditure <-
  expenditure |>
  filter(Indicator %in% "Electricity Generation") |>
  mutate(across(F2000:F2022, ~replace_na(., 0))) |>
  group_by(Country, ISO3) |>
  summarize(across(F2000:F2021, sum), .groups = "drop")

gt_preview(expenditure)
```

Then we plot the data

```{r}
#| label: source4-line1
#| message: false

expenditure <-
  expenditure |>
  filter(ISO3 %in% c("CHN", "USA", "IND")) |>
  rename_with(~str_replace(., "F", ""))|>
  pivot_longer(cols = 3:24, names_to = "Year", values_to = "Energy")

expenditure$Year <- as.numeric(as.character(expenditure$Year))
gt_preview(expenditure)


ggplot(expenditure, aes(x = Year, y = Energy, color = Country)) +
  geom_line(linewidth=1) + # Line graph
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    plot.margin = margin(20, 20, 20, 20),
    legend.position = "bottom"
  ) +
  labs(
    title = "Energy Generated Over the Years",
    subtitle = "For Top 3 Emitting Countries",
    x = "Year",
    y = "Energy Generated (GWh)",
    color = "Country",
    shape = "Country"
  )
```